# <!-- 由 BMAD™ 核心驱动 -->
template:
  id: game-story-template-v2
  name: 游戏开发故事
  version: 2.0
  output:
    format: markdown
    filename: "stories/{{epic_name}}/{{story_id}}-{{story_name}}.md"
    title: "故事：{{story_title}}"

workflow:
  mode: interactive

sections:
  - id: initial-setup
    instruction: |
      此模板创建详细的游戏开发故事，可由游戏开发者立即执行。每个故事应专注于一个单一、可实施的功能，该功能有助于整体游戏功能。

      开始之前，请确保您可以访问：

      - 游戏设计文档 (GDD)
      - 游戏架构文档
      - 此史诗中的任何现有故事

      故事应足够具体，以便开发者无需额外的设计决策即可实施。

  - id: story-header
    content: |
      **史诗：** {{epic_name}}
      **故事ID：** {{story_id}}
      **优先级：** {{High|Medium|Low}}
      **故事点：** {{story_points}}
      **状态：** 草稿

  - id: description
    title: 描述
    instruction: 提供此故事实施内容的清晰、简洁的描述。重点关注正在构建的特定游戏功能或系统。引用定义此功能的 GDD 部分。
    template: "{{clear_description_of_what_needs_to_be_implemented}}"

  - id: acceptance-criteria
    title: 验收标准
    instruction: 定义故事被视为完成必须满足的特定、可测试的条件。每个标准都应是可验证的，并直接关系到游戏功能。
    sections:
      - id: functional-requirements
        title: 功能需求
        type: checklist
        items:
          - "{{specific_functional_requirement}}"
      - id: technical-requirements
        title: 技术需求
        type: checklist
        items:
          - "代码遵循 TypeScript 严格模式标准"
          - "在目标设备上保持 60 FPS"
          - "无内存泄漏或性能下降"
          - "{{specific_technical_requirement}}"
      - id: game-design-requirements
        title: 游戏设计需求
        type: checklist
        items:
          - "{{gameplay_requirement_from_gdd}}"
          - "{{balance_requirement_if_applicable}}"
          - "{{player_experience_requirement}}"

  - id: technical-specifications
    title: 技术规格
    instruction: 提供指导实施的具体技术细节。包括基于游戏架构的类名、文件位置和集成点。
    sections:
      - id: files-to-modify
        title: 要创建/修改的文件
        template: |
          **新文件：**

          - `{{file_path_1}}` - {{purpose}}
          - `{{file_path_2}}` - {{purpose}}

          **修改的文件：**

          - `{{existing_file_1}}` - {{changes_needed}}
          - `{{existing_file_2}}` - {{changes_needed}}
      - id: class-interface-definitions
        title: 类/接口定义
        instruction: 定义所需的特定 TypeScript 接口和类结构
        type: code
        language: typescript
        template: |
          // {{interface_name}}
          interface {{interface_name}} {
              {{property_1}}: {{type}};
              {{property_2}}: {{type}};
              {{method_1}}({{params}}): {{return_type}};
          }

          // {{class_name}}
          class {{class_name}} extends {{phaser_class}} {
              private {{property}}: {{type}};

              constructor({{params}}) {
                  // 实施要求
              }

              public {{method}}({{params}}): {{return_type}} {
                  // 方法要求
              }
          }
      - id: integration-points
        title: 集成点
        instruction: 指定此功能如何与现有系统集成
        template: |
          **场景集成：**

          - {{scene_name}}: {{integration_details}}

          **系统依赖：**

          - {{system_name}}: {{dependency_description}}

          **事件通信：**

          - 发出：`{{event_name}}` 当 {{condition}}
          - 监听：`{{event_name}}` 以 {{response}}

  - id: implementation-tasks
    title: 实施任务
    instruction: 将实施分解为具体的、有序的任务。每个任务应可在1-4小时内完成。
    sections:
      - id: dev-agent-record
        title: 开发代理记录
        template: |
          **任务：**

          - [ ] {{task_1_description}}
          - [ ] {{task_2_description}}
          - [ ] {{task_3_description}}
          - [ ] {{task_4_description}}
          - [ ] 为 {{component}} 编写单元测试
          - [ ] 与 {{related_system}} 进行集成测试
          - [ ] 性能测试和优化

          **调试日志：**
          | 任务 | 文件 | 更改 | 已恢复？ |
          |------|------|--------|-----------|
          | | | | |

          **完成说明：**

          <!-- 仅记录与需求的偏差，保持在50字以内 -->

          **变更日志：**

          <!-- 仅记录实施期间的需求变更 -->

  - id: game-design-context
    title: 游戏设计背景
    instruction: 引用此故事实施的 GDD 特定部分
    template: |
      **GDD 参考：** {{section_name}} ({{page_or_section_number}})

      **游戏机制：** {{mechanic_name}}

      **玩家体验目标：** {{experience_description}}

      **平衡参数：**

      - {{parameter_1}}: {{value_or_range}}
      - {{parameter_2}}: {{value_or_range}}

  - id: testing-requirements
    title: 测试要求
    instruction: 为此游戏功能定义具体的测试标准
    sections:
      - id: unit-tests
        title: 单元测试
        template: |
          **测试文件：**

          - `tests/{{component_name}}.test.ts`

          **测试场景：**

          - {{test_scenario_1}}
          - {{test_scenario_2}}
          - {{edge_case_test}}
      - id: game-testing
        title: 游戏测试
        template: |
          **手动测试用例：**

          1. {{test_case_1_description}}

             - 预期：{{expected_behavior}}
             - 性能：{{performance_expectation}}

          2. {{test_case_2_description}}
             - 预期：{{expected_behavior}}
             - 边缘情况：{{edge_case_handling}}
      - id: performance-tests
        title: 性能测试
        template: |
          **要验证的指标：**

          - 帧率保持在 {{fps_target}} FPS
          - 内存使用保持在 {{memory_limit}}MB 以下
          - {{feature_specific_performance_metric}}

  - id: dependencies
    title: 依赖项
    instruction: 列出在此故事可以实施之前必须完成的任何依赖项
    template: |
      **故事依赖：**

      - {{story_id}}: {{dependency_description}}

      **技术依赖：**

      - {{system_or_file}}: {{requirement}}

      **资产依赖：**

      - {{asset_type}}: {{asset_description}}
      - 位置：`{{asset_path}}`

  - id: definition-of-done
    title: 完成的定义
    instruction: 在故事被视为完成之前必须完成的清单
    type: checklist
    items:
      - "所有验收标准均已满足"
      - "代码已审查并批准"
      - "单元测试已编写并通过"
      - "集成测试通过"
      - "性能目标已达到"
      - "无 linting 错误"
      - "文档已更新"
      - "{{game_specific_dod_item}}"

  - id: notes
    title: 备注
    instruction: 任何额外的背景、设计决策或实施说明
    template: |
      **实施说明：**

      - {{note_1}}
      - {{note_2}}

      **设计决策：**

      - {{decision_1}}: {{rationale}}
      - {{decision_2}}: {{rationale}}

      **未来考虑：**

      - {{future_enhancement_1}}
      - {{future_optimization_1}}
